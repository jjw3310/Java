package model.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import model.vo.NewsVO;

public class NewsDAO {
	private Connection getConnect() {
		Connection conn = null;
		try {
			Context initCtx = new InitialContext();
			Context envCtx = (Context) initCtx.lookup("java:comp/env");
			DataSource ds = (DataSource) envCtx.lookup("jdbc/myoracle");
			conn = ds.getConnection();
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (NamingException e) {
			System.out.println("jdbc/myoracle 이름으로 객체를 찾을 수 없습니다.");
		}
		return conn;
	}
	public boolean insert(NewsVO vo) {
		boolean flag = false;
		PreparedStatement stmt = null;
		Connection conn = getConnect();
		try {
			stmt = conn.prepareStatement("insert into news values "
					+ "(news_seq.nextval, ?, ?, ?, ?, 0)");
			stmt.setString(1, vo.getWriter());
			stmt.setString(2, vo.getTitle());
			stmt.setString(3, vo.getContent());
			stmt.setTimestamp(4, new java.sql.Timestamp(System.currentTimeMillis()));
			int result = stmt.executeUpdate();
			if (result == 1)
				flag = true;
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(conn, stmt, null);
		}
		return flag;
	}
	public boolean update(NewsVO vo) {
		boolean flag = false;
		PreparedStatement stmt = null;
		Connection conn = getConnect();
		try {
			stmt = conn.prepareStatement
					("update news set writer =?, title=?, content=? " + "where id = ?");
			stmt.setString(1, vo.getWriter());
			stmt.setString(2, vo.getTitle());
			stmt.setString(3, vo.getContent());
			stmt.setInt(4, vo.getId());
			int result = stmt.executeUpdate();
			if (result == 1)
				flag = true;
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(conn, stmt, null);
		}
		return num;
	}
	
	public int getCount() {
		Statement stmt = null;
		ResultSet rs = null;
		int totalCount = 0;
		Connection conn = getConnect();
		try {
			stmt = conn.createStatement();
			rs = stmt.executeQuery("select count(*) from news");
			rs.next();
			totalCount = rs.getInt(1);
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(conn, stmt, rs);
		}
		return totalCount;
	}
	public int getCount(String writer) {
		Statement stmt = null;
	}

}
